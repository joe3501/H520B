###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V5.30.0.51174/W32 for ARM     23/Jan/2016  16:20:26 #
# Copyright 1999-2009 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\H520B\FW\src\Drivers\data_uart.c                      #
#    Command line =  E:\H520B\FW\src\Drivers\data_uart.c -lcN                 #
#                    E:\H520B\FW\src\Project\EWARMv5\Debug\List\ -o           #
#                    E:\H520B\FW\src\Project\EWARMv5\Debug\Obj\ --no_cse      #
#                    --no_unroll --no_inline --no_code_motion --no_tbaa       #
#                    --no_clustering --no_scheduling --debug --endian=little  #
#                    --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program  #
#                    Files\IAR Systems\Embedded Workbench                     #
#                    5.4\arm\INC\DLib_Config_Full.h" -I                       #
#                    E:\H520B\FW\src\Project\EWARMv5\..\ -I                   #
#                    E:\H520B\FW\src\Project\EWARMv5\..\..\App\ -I            #
#                    E:\H520B\FW\src\Project\EWARMv5\..\..\Drivers\ -I        #
#                    E:\H520B\FW\src\Project\EWARMv5\..\..\FatFs\ -I          #
#                    E:\H520B\FW\src\Project\EWARMv5\..\..\Lib\inc\ -I        #
#                    E:\H520B\FW\src\Project\EWARMv5\..\..\uCOS\uC-CPU\ -I    #
#                    E:\H520B\FW\src\Project\EWARMv5\..\..\uCOS\uC-LIB\ -I    #
#                    E:\H520B\FW\src\Project\EWARMv5\..\..\uCOS\uCOS-II\Ports #
#                    \ -I E:\H520B\FW\src\Project\EWARMv5\..\..\uCOS\uCOS-II\ #
#                    Source\ -I E:\H520B\FW\src\Project\EWARMv5\..\..\uCOS\uC #
#                    -Probe\ -I E:\H520B\FW\src\Project\EWARMv5\..\..\usb_lib #
#                    \ -I "C:\Program Files\IAR Systems\Embedded Workbench    #
#                    5.4\arm\INC\" -Ol                                        #
#    List file    =  E:\H520B\FW\src\Project\EWARMv5\Debug\List\data_uart.lst #
#    Object file  =  E:\H520B\FW\src\Project\EWARMv5\Debug\Obj\data_uart.o    #
#                                                                             #
#                                                                             #
###############################################################################

E:\H520B\FW\src\Drivers\data_uart.c
      1          /**
      2           * @file data_uart.c
      3           * @brief 
      4           *			串口1的驱动，系统提供给外部的串口，开发阶段可以用于调试
      5           * @version V0.0.1
      6           * @author zhongyh
      7           * @date 2009年12月28日
      8           * @note
      9           *
     10           * @copy
     11           *
     12           * 此代码为深圳合杰电子有限公司项目代码，任何人及公司未经许可不得复制传播，或用于
     13           * 本公司以外的项目。本司保留一切追究权利。
     14           *
     15           * <h1><center>&copy; COPYRIGHT 2009 heroje</center></h1>
     16           */
     17          /* Private include -----------------------------------------------------------*/
     18          #include "stm32f10x_lib.h"
     19          #include <stdio.h>
     20          #include <stdlib.h>
     21          #include <string.h>
     22          #include "data_uart.h"
     23          
     24          /* Private typedef -----------------------------------------------------------*/
     25          /* Private define ------------------------------------------------------------*/
     26          
     27          /**
     28          * @brief 初始化数据串口
     29          */
     30          void data_uart_init(void)
     31          {
     32          	USART_InitTypeDef						USART_InitStructure;
     33          	GPIO_InitTypeDef						GPIO_InitStructure;
     34          	
     35          	RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1 | RCC_APB2Periph_GPIOA, ENABLE);
     36          	
     37          
     38          //#ifndef BOOTCODE_EXIST		//如果没有引导代码	
     39          	/* Configure USART1 Tx (PA.09) as alternate function push-pull */
     40          	GPIO_InitStructure.GPIO_Pin				= GPIO_Pin_9;
     41          	GPIO_InitStructure.GPIO_Mode			= GPIO_Mode_AF_PP;
     42          	GPIO_InitStructure.GPIO_Speed			= GPIO_Speed_50MHz;
     43          	GPIO_Init(GPIOA, &GPIO_InitStructure);
     44          	
     45          	/* Configure USART1 Rx (PA.10) as input floating */
     46          	GPIO_InitStructure.GPIO_Pin				= GPIO_Pin_10;
     47          	GPIO_InitStructure.GPIO_Mode			= GPIO_Mode_IN_FLOATING;
     48          	GPIO_Init(GPIOA, &GPIO_InitStructure);
     49          	
     50          	/* 设置串口参数								*/
     51          	USART_InitStructure.USART_BaudRate		= 115200;
     52          	USART_InitStructure.USART_WordLength	= USART_WordLength_8b;
     53          	USART_InitStructure.USART_StopBits		= USART_StopBits_1;
     54          	USART_InitStructure.USART_Parity		= USART_Parity_No;
     55          	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
     56          	USART_InitStructure.USART_Mode			= USART_Mode_Tx;
     57          	USART_Init(USART1, &USART_InitStructure);
     58          
     59          	USART_Cmd(USART1, ENABLE);	
     60          }
     61          
     62          /**
     63           * @brief	发送一个字节
     64           */
     65          void data_uart_sendbyte(unsigned char data)
     66          {
     67          	USART_SendData(USART1, (unsigned short)data);
     68          }
     69          
     70          /**
     71           * @brief	接收一个字节
     72           */
     73          unsigned char uart_rec_byte(void)
     74          {
     75          	int	i = 0;
     76          	while((USART_GetFlagStatus(USART1,USART_FLAG_RXNE)== RESET)&&(i<400000))
     77          	{
     78          		i++;
     79          	}
     80          	if (i == 400000) 
     81          	{
     82          		return 0x55;
     83          	}
     84          	return  USART_ReceiveData(USART1) & 0xFF;              /* Read one byte from the receive data register         */
     85          }
     86          
     87          /**
     88          * @brief 实现此函数可以利用系统函数printf,方便调试时格式输出调试信息
     89          */
     90          int fputc(int ch, FILE *f)
     91          {
     92          	//ENABLE_DATA_UART();
     93          	/* Write a character to the USART */
     94          	
     95          	USART_SendData(USART1, (u8) ch);
     96          	
     97          	while(USART_GetFlagStatus(USART1, USART_FLAG_TXE) == RESET)
     98          	{
     99          	}
    100          	//	DISABLE_DATA_UART;
    101          	return ch;        
    102          }

   Maximum stack usage in bytes:

     Function           .cstack
     --------           -------
     data_uart_init         24
     data_uart_sendbyte      8
     fputc                   8
     uart_rec_byte           8


   Section sizes:

     Function/Label     Bytes
     --------------     -----
     data_uart_init      124
     data_uart_sendbyte   16
     uart_rec_byte        52
     fputc                32
     ??DataTable6          4

 
 228 bytes in section .text
 
 228 bytes of CODE memory

Errors: none
Warnings: none
